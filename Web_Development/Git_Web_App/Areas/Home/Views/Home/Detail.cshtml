@using AustinsFirstProject.Git_Web_App.Classes;
@using Newtonsoft.Json;

@model AustinsFirstProject.Git_Web_App.Model.Git_Url_Basic_Info;
@{
    ViewData["Title"] = "Detail";
    Layout = "~/Views/Static/Layout.cshtml";
    Git_Commit Active_Git_Commit = new Git_Commit();
    Html.Hidden("active_git", new Git_Commit());
}

<div class="container-fluid padding-off fill">
    <ul class="nav nav-tabs" id="myTab" role="tablist">
        <li class="nav-item myItem">
            <a class="nav-link active myLink" data-toggle="tab" href="#commits" role="tab" aria-controls="home">History</a>
        </li>
        <li class="nav-item myItem">
            <a class="nav-link myLink" data-toggle="tab" href="#test" role="tab" aria-controls="profile">Test</a>
        </li>
    </ul>

    <div class="tab-content fill border">
        <div class="tab-pane active fill" id="commits" role="tabpanel">
            <div id="history" class="row fill">
                <div class="container-fluid fill">
                    <div class="row fill">
                        <div class="col-2 fill">
                            <div class="container pre-scrollable fill">
                                <div class="list-group" id="myTab_2" role="tablist">
                                    @{  var counter = 0;
                                        foreach (var item in Model.Git_Commits.Git__Commits)
                                        {
                                            <button type="button" class="list-group-item" id="commit_@counter" data-toggle="tab" onclick="Get_Active_Git_Commit('commit_' + @counter, @JsonConvert.SerializeObject(@item))" role="tab" aria-controls="commit_detail_@counter"><p>@item.MessageShort</p>
                                    @*<p class="font-weight-bold">@item.MessageShort</p>*@
                                                        @*<p>@item.Author.Name committed on @item.Author.When</p>*@
                                                </button>
                                            counter++;
                                        }
                                    }
                                 </div>
                            </div>
                        </div>

                        <div class="col">
                            <div class="container-fluid padding-off">
                                <div class="row">
                                    <div class="container-fluid padding-off">
                                        <p>
                                            <h4 id="commit_message"></h4>
                                            <span id="committed_by"></span>
                                        </p>
                                    </div>
                                    <div class="container-fluid padding-off">
                                        <div class="row fill">
                                            <div class="col col-2" id="files_n_status"></div>
                                            <div class="col col" id="commit_patch"></div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="tab-pane fill" id="test" role="tabpanel">
            <div id="name" class="row">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-2">
                            <div class="container">
                                @foreach (var item in Model.Git_Commits.Git__Commits)
                                {
                                    <div class="row">
                                        <div class="col">
                                            <p>@item.Author.Name</p>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>

                        <div class="col-8">
                            <div class="container bg-secondary">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $('#myTab .myItem .myLink').click(function (e) {
        $('#myTab .myItem a.active').removeClass('active');
        if (!$(this).hasClass('active')) {
            $(this).addClass('active');
        }
        e.preventDefault();
    });

    function Get_Active_Git_Commit(element_id, commit) {
        element_id = '#' + element_id;

        $('#myTab_2 button.active').removeClass('active');

        if (!$(element_id).hasClass('active')) {
            $(element_id).addClass("active");
        }

        commit = JSON.stringify(commit);

        //$.get("/Company/GetMessage", function (data) {
        //    $("p").html(data);
        //});
        $.post("/Home/Get_Active_Git_Commit", { commit: commit })
            .fail(function (error) {
                console.log('Error');
                console.log(error);
            })
            .done(function (result) {
                result = JSON.parse(result);

                //console.log(result);

                $('#commit_message')[0].textContent = result.Message;

                $('#committed_by')[0].textContent = 'Committed By: ' + result.Author.Name + ' (' + result.Author.Email + ') on ' + result.Author.When;

                var table = '<div class="list-group">';

                var git_changes = result.Git_File_Changes;
                for (var a = 0; a < git_changes.length; a++)
                {
                    var git_changes_json = git_changes[a];
                    console.log(a);
                    console.log(git_changes_json.File_FullName);
                    console.log("\t\t" + git_changes_json.Patch);

                    if (git_changes_json.File_FullName.length > 2) {
                        table += '<p><button type="button" class="list-group-item"><p>' + git_changes_json.File_FullName + ' ';
                        if (git_changes_json.File_Status === 0) {
                            table += '<span class="badge badge-success">Added</span>';
                        } else if (git_changes_json.File_Status === 1) {
                            table += '<span class="badge badge-warning">Modified</span>';
                        } else if (git_changes_json.File_Status === 2) {
                            table += '<span class="badge badge-info">Renamed</span>';
                        } else if (git_changes_json.File_Status === 3) {
                            table += '<span class="badge badge-danger">Deleted</span>';
                        } else {
                            table += '<span class="badge badge-dark">Unknown</span>';
                        }
                        table += '</p></button></p>';
                    }
                }
                table += '</div>';

                $('#files_n_status').empty();
                $('#files_n_status')[0].innerHTML = table;

            

                //
                //JSON.parse(JSON.stringify(result.Git_File_Changes), (key, value) => {

                //    console.log('Key: ' + key);
                //    console.log('Value');
                //    console.log(value);

                //    var str = JSON.stringify(key);
                
                //});
                

                //$('#commit_patch')[0].textContent = result.Patch;
            });
    }
</script>



    
